fortify(dat)
is.ts( fortify(dat) )
is.ts( fortify(stock) )
fortify(stock)
ggseasonplot(fortify( stock ))
ggseasonplot(fortify.zoo( stock ))
autoplot( stock )
ts(stock)
ts(dat)
ts(stock)
ts(stock, start=c(2007, 1), frequency=365 )
stock$data
stock.data
stock
dat
ts(dat, start=c(2007, 1), frequency=365 )
View(dat)
dat
ts(dat, start=c(2019, 12), frequency=365 )
ts(dat, start=c(2019, 12), frequency=365 ), calendar=TRUE )
ts(dat, start=c(2019, 12), frequency=365 ), calendar=TRUE )
as.data.frame(stock)
ts( as.data.frame(stock) )
to.monthly( stock )
is.ts( to.monthly( stock ) )
is.zoo( to.monthly( stock ) )
as.data.frame(stock)
to.monthly( stock )
autoplot( to.monthly( stock ) )
autoplot( to.monthly( stock ), freq=12 )
ggplot(to.montly(stock))
ggplot(to.monthly(stock))
class(stock)
class(to.monthly((stock)))
season <- to.monthly((stock))
df <- data.frame(date = index(season),value = coredata(season),row.names = NULL)
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) +
aes(month, year, group = year, color = year) +
geom_line()
df
index(stock)
data.frame(date=index(stock), value=coredata(stock), row.names=NULL )
factor( format(df$date, "%b"), levels=month.abb)
format(df$date, "%Y" )
df
coredate(stock)
coredata(stock)
Cl(stock)
coredata(stock)
Cl(stock)
season <- to.monthly((stock))
df <- data.frame(date=index(stock), value=Cl(stock), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
Cl(stock)
Cl(stock)[2]
Cl(stock)[1]
df <- data.frame(date=index(stock), value=Cl(stock), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
df
df.SRCE
df
df$date
class(Cl(stock))
stock.Close
stock.Cl
Cl(stock)
data(stock)
data(df)
index(df)
index(stock)
to.monthly(stock)
monthlyReturn(stock)
df <- data.frame(date=index(stock), value=monthlyReturn(stock), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
monthlyReturn(stock)
index( monthlyReturn(stock) )
df <- data.frame(date=index(monthlyReturns(stock)), value=monthlyReturn(stock), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
month.abb
df$date
source('~/Documents/stocks/seasonPlots.R')
season <- to.monthly((stock))
df <- data.frame(date=index(stock), value=Cl(stock), row.names=NULL )
#df$month <- factor(format(df$date, "%b"), levels = month.abb)
#df$year <- format(df$date, "%Y")
#ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
df
df <- data.frame(date=index(monthlyReturns(stock)), value=monthlyReturns(stock), row.names=NULL )
df <- data.frame(date=index(monthlyReturn(stock)), value=monthlyReturn(stock), row.names=NULL )
df
df$date
format(index(monthlyReturn(stock)))
format(index(monthlyReturn(stock)), "%b")
df$month <- factor(format(index(monthlyReturn(stock)), levels = month.abb)
format(index(monthlyReturn(stock)), "%b")
df$month <- factor(format(index(monthlyReturn(stock))), levels = month.abb)
df$month
df$month <- factor(format(index(stock)), levels = month.abb)
df$month <- factor(format(index(stock), levels = month.abb)
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$month
month.abb
df$year <- format(df$date, "%Y")
df$year
df$month
df
df.value
df$value
df$date
df$monthly.returns
df
ggplot(df)
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
apply.weekly(stock,FUN=function(x) { max(Cl(x)) } )
apply.monthly(stock,FUN=function(x) { max(Cl(x)) } )
as.numeric(period.max(Cl(stock),endpoints(stock,on='weeks')))
as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=monthlyHighs, row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=monthlyHighs, row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
stock <-  getSymbols("AMZN", auto.assign=F)
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=monthlyHighs, row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
$df.value
df.value
df$value
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
df
df.value
df.$value
df$value
ggplot(df$value) + aes(month, year, group = year, color = year) + geom_line()
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
coredata(monthlyHighs)
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyHighs), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
ggplot(df) + aes(month, year, group = year, color = year) + geom_line()
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line()
as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
stockSymbols(stock)
stock$symbol
stock$name
stock.sticker
stock.tickers
stock.tickers
l.out
title
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
data.name
data.name <- readline(prompt = "Enter Stock Symbol: ")
stock <-getSymbols(data.name, auto.assign = F ) #access CLose and Open with stock$MOTS.Open
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyHighs), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Highs for ", data.name)
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
stock
data.name <- readline(prompt = "Enter Stock Symbol: ")
stock <-getSymbols(data.name, auto.assign = F ) #access CLose and Open with stock$MOTS.Open
monthlyHighs <- as.numeric(period.max(Cl(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyHighs), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Highs for ", data.name)
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
source('~/Documents/stocks/seasonPlots.R')
title
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
source('~/Documents/stocks/seasonPlots.R')
library(quantmod)
library(xts)
library(rvest)
library(tidyverse)
library(stringr)
library(forcats)
library(lubridate)
library(plotly)
library(dplyr)
library(forecast)
library(ggplot2)
library(PerformanceAnalytics)
data.name <- readline(prompt = "Enter Stock Symbol: ")
stock <-getSymbols(data.name, auto.assign = F ) #access CLose and Open with stock$MOTS.Open
monthlyHighs <- as.numeric(period.max(Hi(stock),endpoints(stock,on='months')))
monthlyLows <- as.numeric(period.min(Lo(stock),endpoints(stock,on='months')))
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyHighs), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Highs for ", data.name)
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyLows), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Lows for ", data.name)
ggplot(df) + aes(month, monthlyLows, group = year, color = year) + geom_line() + ggtitle(title)
source('~/Documents/stocks/seasonPlots.R')
source('~/Documents/stocks/seasonPlots.R')
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyLows), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Lows for ", data.name)
ggplot(df) + aes(month, monthlyLows, group = year, color = year) + geom_line() + ggtitle(title)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyHighs), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Highs for ", data.name)
ggplot(df) + aes(month, monthlyHighs, group = year, color = year) + geom_line() + ggtitle(title)
df <- data.frame(date=index(monthlyReturn(stock)), value=coredata(monthlyLows), row.names=NULL )
df$month <- factor(format(df$date, "%b"), levels = month.abb)
df$year <- format(df$date, "%Y")
title <- paste( "Monthly Lows for ", data.name)
ggplot(df) + aes(month, monthlyLows, group = year, color = year) + geom_line() + ggtitle(title)
source('~/Documents/stocks/seasonPlots.R')
require(gridExtra)
source('~/Documents/stocks/seasonPlots.R')
grid.arrange(plot1, plot2, ncol=1)
source('~/Documents/stocks/trendStrategy.R')
addTA(adx, col = c("green", "red", "blue"), lwd = c(1, 1, 2), legend = NULL)
adx <- ADX(HLC(dat), n = 14, maType = "EMA", wilder = TRUE)[, c("DIp", "DIn", "ADX")]
dat
dat[,-5]
source('~/Documents/stocks/trendStrategy.R')
adx <- ADX(HLC(dat), n = 14, maType = "EMA", wilder = TRUE)[, c("DIp", "DIn", "ADX")]
addTA(adx, col = c("green", "red", "blue"), lwd = c(1, 1, 2), legend = NULL)
dat
dat.name
dat$name
dat$symbol
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
addTA(adx, col = c("green", "red", "blue"), lwd = c(1, 1, 2), legend = NULL)
candleChart(dat[,-5], multi.col = TRUE, theme = "white", subset = "last 9 months", name=data.name, TA="addADX()" )
source('~/Documents/stocks/trendStrategy.R')
candleChart(dat[,-5], multi.col = TRUE, theme = "white", subset = "last 9 months", name=data.name)
addADX()
candleChart(dat[,-5], multi.col = TRUE, theme = "white", subset = "last 9 months", name=data.name)
reChart(major.ticks='months',subset='first 16 weeks')
addADX()
reChart(major.ticks='months',subset='first 16 weeks')
addADX()
addADX()
candleChart(dat[,-5], multi.col = TRUE, theme = "white", subset = "last 9 months", name=data.name)
addADX()
chart_Series(dat[,-5])
addADX()
source('~/Documents/stocks/trendStrategy.R')
library(quantmod)
chart_Series(dat[,-5], subset='last 3 months')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
dat.date
dat.$DATE
dat$date
dat <- subset(dat, date >= dat$date)
dat$date
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
fig
source('~/Documents/stocks/trendStrategy.R')
fig
source('~/Documents/stocks/trendStrategy.R')
fig
fig <- df %>% plot_ly(x = ~date, type="ohlc",
open = ~Open, close = ~Close,
high = ~High, low = ~Low)
fig <- fig %>% layout(title = "Basic OHLC Chart")
fig
source('~/Documents/stocks/trendStrategy.R')
index(stock)
last( index(stock) )
head( index(stock) )
first( index(stock) )
source('~/Documents/stocks/trendStrategy.R')
fig
macd  <- MACD( stock[,"Close"], 12, 26, 9, maType="EMA" )
stock
stock[,-5]
macd  <- MACD( stock[,-5], 12, 26, 9, maType="EMA" )
macd = MACD(stock[,4], nFast=12, nSlow=26,nSig=9,maType=SMA, percent = FALSE)
chartSeries(NSEI, TA="addMACD()")
macd = MACD(stock[,4], nFast=12, nSlow=26,nSig=9,maType=SMA, percent = FALSE)
chartSeries(dat, TA="addMACD()")
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
stock[,4]
tail( stock[,4] )
macd <- MACD(stock[,4], nFast=12, nSlow=26,nSig=9,maType=SMA, percent = FALSE)
chartSeries(dat, TA="addMACD()")
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
dat
dat[,4]
head( dat[,4] )
tail( dat[,4] )
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
dat[,4]
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
source('~/Documents/stocks/trendStrategy.R')
macd <- MACD(dat[,4], nFast=12, nSlow=26,nSig=9,maType="EMA" )
mac
macd
macd&signal
macd&signal()
macd&signalCondition()
macd$macd
macd = MACD(dat[,4], nFast=12, nSlow=26,nSig=9,maType="EMA" )
macd$macd
macd
macd = MACD(dat[,4], nFast=12, nSlow=26,nSig=9,maType="EMA" )
chartSeries(stock, TA="addMACD()")
signal <- Lag(ifelse(macd$macd < macd$signal, -1, 1))
returns <- ROC(data)*signal
returns <- returns['2008-06-02/2015-09-22']
portfolio <- exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(ret, top=10)
table.DownsideRisk(ret)
charts.PerformanceSummary(ret)
macd = MACD(dat, nFast=12, nSlow=26,nSig=9,maType="EMA" )
chartSeries(stock, TA="addMACD()")
signal <- Lag(ifelse(macd$macd < macd$signal, -1, 1))
returns <- ROC(data)*signal
returns <- returns['2008-06-02/2015-09-22']
portfolio <- exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(ret, top=10)
table.DownsideRisk(ret)
charts.PerformanceSummary(ret)
macd = MACD(dat, nFast=12, nSlow=26,nSig=9,maType="EMA" )
macd = MACD(dat[,4], nFast=12, nSlow=26,nSig=9,maType="EMA" )
macd
str(mcd)
str(macd)
macd$signal
macd.signal
macd[1]
macd[2]
MACD.macd$signal
View(dat)
View(macd)
View(macd)
View(macd)
class(macd)
signal <- Lag(ifelse(macd$macd < macd$signal, -1, 1))
macd[signal]
macd["signal"]
macd
macd[2,]
macd[,2]
macd
macd[,1]
macd[,2]
macd[2,]
signal <- Lag(ifelse(macd[1,] < macd[,2], -1, 1))
macd.mcad
mcad$signal
mcad$Signal
mcad
inspect(mcad)
macd = MACD(dat[,4], nFast=12, nSlow=26,nSig=9,maType="EMA" )
macd
test <- as.matrix(macd)
test$signal
test.signal
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
install.packages("pander")
sessionInfo()
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
currency("USD")
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
getSymbols("CAT")
cat
CAT
last(CAT)
last(CAT)
CAT
tail( CAT )
source('~/Documents/stocks/startSimulation.R')
head(IWM)
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
summary(IWM)
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
source('~/Documents/stocks/startSimulation.R')
cwd <- getwd()
setwd("./_data/")
results_file <- paste("results", strategy.st, "RData", sep = ".")
if( file.exists(results_file) ) {
load(results_file)
} else {
results <- applyStrategy(strategy.st, portfolios = portfolio.st)
updatePortf(portfolio.st)
updateAcct(account.st)
updateEndEq(account.st)
if(checkBlotterUpdate(portfolio.st, account.st, verbose = TRUE)) {
save(list = "results", file = results_file)
save.strategy(strategy.st)
}
}
setwd(cwd)
source('~/Documents/stocks/startSimulation.R')
checkBlotterUpdate()
save.strategy()
results_file
results <- applyStrategy(strategy.st, portfolios = portfolio.st)
source('~/Documents/stocks/startSimulation.R')
setwd("/home/joel/Documents/stocks")
source('~/Documents/stocks/charting.R')
CAT
mom <- stockMomentum(CAT)
mom
mom <- tail( mom, n=300 )
mom
momSorted <- mom[order(momentum), ]
momSorted <- mom[ order(momentum), ]
momSorted <- mom[ ,order(momentum) ]
momSorted <- mom[ ,order(mom$momentum) ]
momSorted <- mom[ order(mom$momentum), ]
momSorted
momSorted <- mom[ ,order(mom$momentum) ]
colnames(mom)
sort( mom[,-1])
sort( mom[,1])
order( mom[,-1])
mom[,-1]
mom[,-1]
mom
mom$momentum
order( mom$momentum )
mom$momentum
coredata(mom$momentum)
order(coredata(mom$momentum))
sort(coredata(mom$momentum))
tail( sort(coredata(mom$momentum)), n=13)
CAT
tail( CAT, n=100 )
cat100 <- tail( CAT, n=100 )
chartMomentum(cat100)
debugSource('~/Documents/stocks/charting.R')
debugSource('~/Documents/stocks/charting.R')
chartMomentum(cat100)
debugSource('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
source('~/Documents/stocks/charting.R')
chartMomentum(cat100)
